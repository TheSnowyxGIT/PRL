{
	"info": {
		"_postman_id": "c66d301e-9eb5-4f89-904f-0288fa1c6c1c",
		"name": "PRL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12515149",
		"_collection_link": "https://interstellar-meteor-30567.postman.co/workspace/PRL~4345c47a-cc76-494b-9381-63d60f9af6bf/collection/12515149-c66d301e-9eb5-4f89-904f-0288fa1c6c1c?action=share&source=collection_link&creator=12515149"
	},
	"item": [
		{
			"name": "matches service",
			"item": [
				{
					"name": "Get All Matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}:{{p1}}/matches",
							"host": [
								"{{domain}}"
							],
							"port": "{{p1}}",
							"path": [
								"matches"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get A Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}:{{p1}}/matches/656f32f6adcc4b0ba39aeb43",
							"host": [
								"{{domain}}"
							],
							"port": "{{p1}}",
							"path": [
								"matches",
								"656f32f6adcc4b0ba39aeb43"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Post New Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"dsfg vs adf\",\n    \"competitorId1\": \"BMW\",\n    \"competitorId2\": \"MERCEDES\",\n    \"startDate\": \"2023-12-05T14:15:42.676Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}:{{p1}}/matches",
							"host": [
								"{{domain}}"
							],
							"port": "{{p1}}",
							"path": [
								"matches"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"LIVE\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}:{{p1}}/matches/657f6282e84e410264cd8ef9",
							"host": [
								"{{domain}}"
							],
							"port": "{{p1}}",
							"path": [
								"matches",
								"657f6282e84e410264cd8ef9"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "live matches service",
			"item": [
				{
					"name": "Get Live Matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}:{{p2}}/live-matches",
							"host": [
								"{{domain}}"
							],
							"port": "{{p2}}",
							"path": [
								"live-matches"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "matches events history",
			"item": [
				{
					"name": "Get match event history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}:{{p3}}/match-history/657f62824c5693e835493eb8",
							"host": [
								"{{domain}}"
							],
							"port": "{{p3}}",
							"path": [
								"match-history",
								"657f62824c5693e835493eb8"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "fav service",
			"item": [
				{
					"name": "Get user favorite matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}:{{p4}}/match-favorites",
							"host": [
								"{{domain}}"
							],
							"port": "{{p4}}",
							"path": [
								"match-favorites"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Add match in favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "user_id",
								"value": "3",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"dsfg vs adf\",\n    \"competitorId1\": \"BMW\",\n    \"competitorId2\": \"MERCEDES\",\n    \"startDate\": \"2023-12-05T14:15:42.676Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}:{{p4}}/match-favorites/asdqeafadsfads",
							"host": [
								"{{domain}}"
							],
							"port": "{{p4}}",
							"path": [
								"match-favorites",
								"asdqeafadsfads"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Remove match from favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "user_id",
								"value": "3",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"dsfg vs adf\",\n    \"competitorId1\": \"BMW\",\n    \"competitorId2\": \"MERCEDES\",\n    \"startDate\": \"2023-12-05T14:15:42.676Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}:{{p4}}/match-favorites/asdqeafadsfads",
							"host": [
								"{{domain}}"
							],
							"port": "{{p4}}",
							"path": [
								"match-favorites",
								"asdqeafadsfads"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "domain",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "p1",
			"value": "3000",
			"type": "string"
		},
		{
			"key": "p2",
			"value": "3001",
			"type": "string"
		},
		{
			"key": "p3",
			"value": "3002",
			"type": "string"
		},
		{
			"key": "p4",
			"value": "3003",
			"type": "string"
		}
	]
}